class SparseTable {
    int r, c;
    vector<int> lg;
    vector<vector<int>> st;

   public:
    SparseTable(vector<int> &v) {
        r = 20;
        c = v.size();
        st = vector<vector<int>>(r + 1, vector<int>(c + 1));
        lg = vector<int>(c + 1);
        for (int i = 0; i < c; i++) st[0][i] = v[i];
        for (int i = 1; i <= r; i++) {
            for (int j = 0; (j + (1 << i)) <= c; j++) {
                st[i][j] = min(st[i - 1][j], st[i - 1][j + (1 << (i - 1))]);
            }
        }
        lg[1] = 0;
        for (int i = 2; i <= c; i++) lg[i] = lg[i / 2] + 1;
    }
    int query(int L, int R) {
        int i = lg[R - L + 1];
        return min(st[i][L], st[i][R - (1 << i) + 1]);
    }
};
